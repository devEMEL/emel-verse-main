'use client';
import type { Metadata } from 'next';
import { PT_Mono } from 'next/font/google';
import './globals.css';
import Header from '@/components/Header';
import Footer from '@/components/Footer';
import {
    ApolloProvider,
    ApolloClient,
    InMemoryCache,
    gql,
} from '@apollo/client';

const PT_Mono_ = PT_Mono({
    subsets: ['latin'],
    weight: ['400'],
});

const cache = new InMemoryCache({
    typePolicies: {
        Query: {
            fields: {
                clients: {
                    merge(existing, incoming) {
                        return incoming;
                    },
                },
                projects: {
                    merge(existing, incoming) {
                        return incoming;
                    },
                },
            },
        },
    },
});

const client = new ApolloClient({
    // ssrMode: typeof window === "undefined",
    uri: 'http://localhost:5000/graphql',
    cache,
});

const metadata: Metadata = {
    title: 'Create Next App',
    description: 'Generated by create next app',
};

export default function RootLayout({
    children,
}: Readonly<{
    children: React.ReactNode;
}>) {
    return (
        <html lang="en">
            <body
                className={`${PT_Mono_.className} antialiased overflow-x-hidden text-sm`}
            >
                <div className="min-h-screen relative bg-black">
                
                
               
                        {/* <div className="relative z-10 p-6"></div> */}

                        <ApolloProvider client={client}>
                            
                            <Header />
                            <div className="min-h-screen max-w-6xl mx-auto space-y-8 px-5 py-14 lg:px-10">
                                {children}
                            </div>
                            <Footer />

                        </ApolloProvider>
                        </div>
            </body>
        </html>
    );
}
