'use client'
import type { Metadata } from 'next';
import localFont from 'next/font/local';
import './globals.css';
import Header from '@/components/Header';
import Footer from '@/components/Footer';
import { ApolloProvider, ApolloClient, InMemoryCache, gql } from '@apollo/client';


const geistSans = localFont({
    src: "./fonts/GeistVF.woff",
    variable: "--font-geist-sans",
    weight: "100 900",
});

const geistMono = localFont({
    src: "./fonts/GeistMonoVF.woff",
    variable: "--font-geist-mono",
    weight: "100 900",
});

const cache = new InMemoryCache({
    typePolicies: {
        Query: {
            fields: {
                clients: {
                    merge(existing, incoming) {
                        return incoming;
                    }
                },
                projects: {
                    merge(existing, incoming) {
                        return incoming;
                    }
                }
            }
        }
    }
})

const client = new ApolloClient({
    // ssrMode: typeof window === "undefined",
    uri: "http://localhost:5000/graphql",
    cache
});


const metadata: Metadata = {
    title: 'Create Next App',
    description: 'Generated by create next app',
};

export default function RootLayout({
    children,
}: Readonly<{
    children: React.ReactNode;
}>) {
    return (
        <html lang="en">
            <body
                className={`${geistSans.variable} ${geistMono.variable} antialiased overflow-x-hidden text-sm`}
            >
                <ApolloProvider client={client} >

                    {/* <Header /> */}
                    <div className="min-h-screen max-w-5xl mx-auto space-y-8 px-5 py-14 lg:px-10">
                        {children}
                    </div>
                    {/* <Footer /> */}
                </ApolloProvider>

            </body>
        </html>
    );
}

